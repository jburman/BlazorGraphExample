@page "/"

@inject AppState state
@inject IGraphService graphService

<section class="section">
    <div class="container">
        <nav class="navbar">
            <div class="navbar-end">
                <div class="field is-grouped">
                    <Login></Login>
                </div>
            </div>
        </nav>
        <h1 class="title">Blazor Graph API Example</h1>
        <article class="subtitle">
            Welcome to an example of using the Microsoft Graph API from <a href="https://blazor.net" target="_blank">Blazor</a>. 
            View the <a href="https://github.com/jburman/BlazorGraphExample" target="_blank">source</a> on Github to see how it works.
        </article>

        @if (state.LoginStatus == LoginStatus.LoggedIn)
        {
            <hr />
            <p class="subtitle">
                @if (state.User != null)
                {
                    <text>Hello, @(string.IsNullOrEmpty(state.User.DisplayName) ? state.User.UserPrincipalName : state.User.DisplayName)</text>
                }
            </p>
            <DriveItemList></DriveItemList>
        }
        else if (state.LoginStatus == LoginStatus.LoggedOut)
        {
            <div class="subtitle">
                <article class="tile is-10 notification is-vertical">
                    <p class="has-text-weight-bold">You are not logged in</p>
                    <p>Please click on Login to get started.</p>
                </article>
            </div>

        }
        else // still loading login status
        {
            <Loading Text="Loading your info..."></Loading>
        }
    </div>
</section>

@functions {

    protected override void OnInit()
    {
        state.LoginStatusChanged += async () =>
        {
            await LoadUserAsync();

            StateHasChanged();
        };
    }

    protected async Task LoadUserAsync()
    {
        if (state.LoginStatus == LoginStatus.LoggedIn)
        {
            var user = await graphService.GetMeAsync();
            state.SetUser(user);
        }
        else
            state.SetUser(null);
    }
}
